{"version":3,"sources":["services/getPlayerToken.js","services/fetchTrivia.js","actions/index.js","components/SettingsBtn/index.jsx","components/NeonTitle/style.js","components/NeonTitle/index.js","pages/styles.js","pages/Login.jsx","services/encryptEmail.js","services/saveScore.js","components/CorrectAnswer/style.js","components/CorrectAnswer/index.js","components/IncorrectAnswer/style.js","components/IncorrectAnswer/index.js","components/NextBtn/style.js","components/NextBtn/index.js","components/Question/style.js","components/Question/index.jsx","components/Header/style.js","components/Header/index.js","components/Counter/style.js","components/Counter/index.js","pages/InGame.jsx","pages/Settings.jsx","pages/Feedback.jsx","pages/Ranking.jsx","App.js","serviceWorker.js","reducers/player.js","reducers/token.js","reducers/trivia.js","reducers/timer.js","reducers/index.js","store/index.js","index.js"],"names":["getPlayerToken","a","fetch","response","json","results","localStorage","setItem","token","fetchTrivia","getItem","requestSetPlayer","payload","type","setScore","getToken","dispatch","console","log","SettingsBtn","history","this","props","data-testid","onClick","push","style","cursor","marginLeft","width","height","position","top","left","React","Component","ContainerAnimation","keyframes","StyledContainer","styled","div","TriviaAnimation","TriviaContainer","TrybeAnimation","TrybeContainer","NeonTitle","StyledLoginField","StyledFeedbackDiv","questions","StyledRankingContainer","StyledPlayerRank","StyledInput","input","ButtonAnimation","ButtonRankingAnimation","StyledButton","button","StyledRankingButton","StyledInputContainer","Login","handleChange","target","name","value","setState","disableButton","state","email","result","disableBtn","handleClick","payloadLogin","gravatarEmail","bind","onChange","placeholder","disabled","connect","encryptEmail","md5","toString","saveScore","score","currentPlayer","picture","previousPlayers","JSON","parse","players","some","map","player","updatePlayer","stringify","difficultScore","easy","medium","hard","calculateScore","difficulty","time","toFixed","StyledCorrectAnswerButton","CorrectAnswer","handleAnswer","answer","testid","className","game","ButtonAnimationRed","StyledIncorrectAnswerButton","IncorrectAnswer","StyledNextButton","NextBtn","StyledQuestionsDiv","StyledQuestion","h1","Question","updateQuestion","resultado","length","renderAnswers","htmlDecode","DOMParser","parseFromString","documentElement","textContent","answerIsSelected","incorrect","incorrect_answers","index","key","correct","correct_answer","sort","Math","random","prevState","nextQuestion","currentQuestion","category","question","handleNext","StyledImg","img","StyledPlayerDataR","StyledPlayerDataC","StyledTopContainer","Header","userData","src","alt","StyledCounter","CounterWrap","Counter","countSecond","setInterval","margin","color","InGame","loaded","resetCounter","getTrivia","response_code","trivia","getQuestions","Settings","Feedback","assertions","message","Ranking","getLocalStorage","playerRanking","b","fontFamily","textAlign","marginTop","App","exact","path","render","Boolean","window","location","hostname","match","INITIAL_STATE","playerReducer","action","tokenReducer","triviaReducer","timeReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a73a2a2c.chunk.js","sourcesContent":["const PLAYER_TOKEN_API = 'https://opentdb.com/api_token.php?command=request';\r\n\r\nconst getPlayerToken = async () => {\r\n  const response = await fetch(PLAYER_TOKEN_API);\r\n  const results = await response.json();\r\n  localStorage.setItem('token', results.token);\r\n  return results.token;\r\n};\r\n\r\nexport default getPlayerToken;\r\n","const QUESTS_ENDPOINT = 'https://opentdb.com/api.php?amount=5&token=';\r\n\r\nconst fetchTrivia = async () => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await (await fetch(`${QUESTS_ENDPOINT}${token}`)).json();\r\n  return response;\r\n};\r\n\r\nexport default fetchTrivia;\r\n","import getPlayerToken from '../services/getPlayerToken';\r\nimport fetchTrivia from '../services/fetchTrivia';\r\n\r\nexport const SET_PLAYER = 'SET_PLAYER';\r\nexport const SET_PLAYER_TOKEN = 'SET_PLAYER_TOKEN';\r\nexport const SET_TRIVIA = 'SET_TRIVIA';\r\nexport const SET_TIME = 'SET_TIME';\r\nexport const RESET_TIME = 'RESET_TIME';\r\nexport const SELECT_ANSWER = 'SELECT_ANSWER';\r\nexport const SET_SCORE = 'SET_SCORE';\r\n\r\nexport const requestSetPlayer = (payload) => ({\r\n  type: SET_PLAYER,\r\n  payload,\r\n});\r\n\r\nexport const setScore = (payload) => ({\r\n  type: SET_SCORE,\r\n  payload,\r\n});\r\n\r\nexport const SetPlayerToken = (payload) => ({\r\n  type: SET_PLAYER_TOKEN,\r\n  payload,\r\n});\r\n\r\nexport const getToken = () => async (dispatch) => {\r\n  try {\r\n    const token = await getPlayerToken();\r\n    dispatch(SetPlayerToken(token));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setTrivia = (payload) => ({\r\n  type: SET_TRIVIA,\r\n  payload,\r\n});\r\n\r\nexport const getTrivia = (token) => async (dispatch) => {\r\n  try {\r\n    const questions = await fetchTrivia(token);\r\n    console.log(questions);\r\n    dispatch(setTrivia(questions));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const elapsedTime = () => ({\r\n  type: SET_TIME,\r\n});\r\n\r\nexport const resetTime = () => ({\r\n  type: RESET_TIME,\r\n});\r\n\r\nexport const selectAnswer = (payload) => ({\r\n  type: SELECT_ANSWER,\r\n  payload,\r\n});\r\n","import React from 'react';\r\nimport { FcSettings } from 'react-icons/fc';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class SettingsBtn extends React.Component {\r\n  render() {\r\n    const { history } = this.props;\r\n    return (\r\n      <FcSettings\r\n        data-testid=\"btn-settings\"\r\n        onClick={ () => history.push('/settings') }\r\n        style={ {\r\n          cursor: 'pointer',\r\n          marginLeft: '8px',\r\n          width: '30px',\r\n          height: '30px',\r\n          position: 'absolute',\r\n          top: '5%',\r\n          left: '88%',\r\n        } }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsBtn.propTypes = {\r\n  history: PropTypes.objectOf,\r\n}.isRequired;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const ContainerAnimation = keyframes`\r\n  from { box-shadow: 0.5vw 0 1vw 1vw #f88e26, inset 0.5vw 0 1vw 1vw #f88e26; }\r\n  to { box-shadow: 0.5vw 0 2vw 1vw #f88e26, inset 0.5vw 0 2vw 1vw #f88e26; }\r\n`;\r\n\r\nexport const StyledContainer = styled.div`\r\n  align-items: center;\r\n  animation: ${ContainerAnimation} 1s ease-in-out infinite alternate;\r\n  border-radius: 2vw;\r\n  border: 0.75vw solid #f8bc26;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: neon;\r\n  margin: 3vh auto;\r\n  padding: 1vw;\r\n  width: clamp(270px,33%, 600px);\r\n`;\r\n\r\nconst TriviaAnimation = keyframes`\r\n  from { text-shadow: 0 0 1vw #fb4264, 0 0 3vw #fb4264, 0 0 10vw #fb4264; }\r\n  to { text-shadow: 0 0 1vw #f40A35, 0 0 3vw #f40A35, 0 0 10vw #f40a35; }\r\n`;\r\n\r\nexport const TriviaContainer = styled.div`\r\n  animation: ${TriviaAnimation} 1s ease-in-out infinite alternate;\r\n  color: #fb4264;\r\n  font-family: neon;\r\n  font-size: 3em;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TrybeAnimation = keyframes`\r\n  from { text-shadow: 0 0 1vw #2fc18c, 0 0 3vw #2fc18c, 0 0 10vw #2fc18c; }\r\n  to { text-shadow: 0 0 3vw #3effb8, 0 0 4vw #3effb8; }\r\n`;\r\n\r\nexport const TrybeContainer = styled.div`\r\n  color: #2fc18c;\r\n  animation: ${TrybeAnimation} 1s ease-in-out infinite alternate;\r\n  font-size: 3em;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default StyledContainer;\r\n","import React from 'react';\r\nimport { StyledContainer, TriviaContainer, TrybeContainer } from './style';\r\n\r\nclass NeonTitle extends React.Component {\r\n  render() {\r\n    return (\r\n      <StyledContainer>\r\n        <TriviaContainer>trivia</TriviaContainer>\r\n        <TrybeContainer>trybe</TrybeContainer>\r\n      </StyledContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NeonTitle;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const StyledLoginField = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2vh;\r\n  padding-top: 2vh;\r\n  width: 95%;\r\n`;\r\n\r\nexport const StyledFeedbackDiv = styled.div`\r\nalign-items: center;\r\n  background: rgba(255, 255, 255, 0.01);\r\n  border-radius: 8px;\r\n  box-shadow: inset 0 22px 56px -36px rgba(255, 255, 255, 0.5),\r\n    inset 0 4px 5px -4px rgba(255, 255, 255, 1),\r\n    inset 0 -31px 34px -32px rgba(96, 68, 144, 0.3),\r\n    inset 0 39px 50px -34px rgba(202, 172, 255, 0.3),\r\n    inset 0 2px 9px rgba(154, 146, 210, 0.3),\r\n    inset 0 1px 10px rgba(227, 222, 255, 0.2);\r\n  color: #fff;\r\n  display: flex;\r\n  font-family: 'Roboto', sans-serif;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  padding: 4vh;\r\n  gap: ${(props) => (props.questions && '1vw')};\r\n  transition: 0.3s;\r\n  width: 90%;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 19px 28px -18px rgba(255, 255, 255, 0.5),\r\n      inset 0 4px 6px -3px rgba(255, 255, 255, 1),\r\n      inset 0 -51px 44px -42px rgba(96, 68, 144, 0.3),\r\n      inset 0 59px 60px -32px rgba(202, 172, 255, 0.3),\r\n      inset 0 4px 16px rgba(154, 146, 210, 0.3),\r\n      inset 0 2px 25px rgba(227, 222, 255, 0.23);\r\n  }\r\n`;\r\n\r\nexport const StyledRankingContainer = styled.div`\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.01);\r\n  border-radius: 8px;\r\n  box-shadow: inset 0 22px 56px -36px rgba(255, 255, 255, 0.5),\r\n    inset 0 4px 5px -4px rgba(255, 255, 255, 1),\r\n    inset 0 -31px 34px -32px rgba(96, 68, 144, 0.3),\r\n    inset 0 39px 50px -34px rgba(202, 172, 255, 0.3),\r\n    inset 0 2px 9px rgba(154, 146, 210, 0.3),\r\n    inset 0 1px 10px rgba(227, 222, 255, 0.2);\r\n  color: #fff;\r\n  display: flex;\r\n  font-family: 'Roboto', sans-serif;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  padding: 4vh;\r\n  gap: ${(props) => (props.questions && '1vw')};\r\n  transition: 0.3s;\r\n  width: 90%;\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 19px 28px -18px rgba(255, 255, 255, 0.5),\r\n      inset 0 4px 6px -3px rgba(255, 255, 255, 1),\r\n      inset 0 -51px 44px -42px rgba(96, 68, 144, 0.3),\r\n      inset 0 59px 60px -32px rgba(202, 172, 255, 0.3),\r\n      inset 0 4px 16px rgba(154, 146, 210, 0.3),\r\n      inset 0 2px 25px rgba(227, 222, 255, 0.23);\r\n  }\r\n`;\r\n\r\nexport const StyledPlayerRank = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: clamp(20%, 40%, 60%);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  width: clamp(270px, 33%, 600px);\r\n `;\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 0 22px 56px -36px rgba(255, 255, 255, 0.5),\r\n    0 4px 5px -4px rgba(255, 255, 255, 1),\r\n    0 -31px 34px -32px rgba(96, 68, 144, 0.3),\r\n    0 39px 50px -34px rgba(202, 172, 255, 0.3),\r\n    0 2px 9px rgba(154, 146, 210, 0.3),\r\n    0 1px 10px rgba(227, 222, 255, 0.2);\r\n  border: none;\r\n  color: white;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  height: 42px;\r\n  outline: none;\r\n  text-indent: 12px;\r\n  width: 100%;\r\n\r\n  &::placeholder {\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nexport const ButtonAnimation = keyframes`\r\n  from { box-shadow: 0 0 0.5vw #2fc18c, 0 0 1vw #2fc18c, 0 0 1.5vw #2fc18c; }\r\n  to { box-shadow: 0 0 1.5vw #3effb8,0 0 1vw #2fc18c, 0 0 0.5vw #2fc18c; }\r\n`;\r\n\r\nexport const ButtonRankingAnimation = keyframes`\r\n  from { box-shadow: 0 0 0.5vw #FFFF00, 0 0 1vw #FFFF00, 0 0 1.5vw #FFFF00; }\r\n  to { box-shadow: 0 0 1.5vw #CCCC00,0 0 1vw #2fc18c, 0 0 0.5vw #2fc18c; }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n  height: 42px;\r\n  outline: none;\r\n  width: 25vw;\r\n\r\n  &:enabled {\r\n    animation: ${ButtonAnimation} 1s ease-in-out infinite alternate;\r\n    background-color: #2fc18c;\r\n    box-shadow: 0 0 3vw #3effb8;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledRankingButton = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color: rgba(255, 255, 254, 0.5);\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 2.5vh;\r\n  font-weight: 700;\r\n  height: 42px;\r\n  outline: none;\r\n  width: 25vw;\r\n  margin: 25px;\r\n\r\n  &:enabled {\r\n    animation: ${ButtonRankingAnimation} 1s ease-in-out infinite alternate;\r\n    background-color: #FFFF00;\r\n    box-shadow: 0 0 3vw #FFFF00;\r\n    color: #585858;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// https://www.cssscript.com/demo/neon-glass-cards/\r\nexport const StyledInputContainer = styled.div`\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.01);\r\n  border-radius: 8px;\r\n  box-shadow: inset 0 22px 56px -36px rgba(255, 255, 255, 0.5),\r\n    inset 0 4px 5px -4px rgba(255, 255, 255, 1),\r\n    inset 0 -31px 34px -32px rgba(96, 68, 144, 0.3),\r\n    inset 0 39px 50px -34px rgba(202, 172, 255, 0.3),\r\n    inset 0 2px 9px rgba(154, 146, 210, 0.3),\r\n    inset 0 1px 10px rgba(227, 222, 255, 0.2);\r\n  color: #fff;\r\n  display: flex;\r\n  font-family: 'Roboto', sans-serif;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  padding: 4vh;\r\n  gap: ${(props) => (props.questions && '1vw')};\r\n  transition: 0.3s;\r\n  /* width: ${(props) => (props.questions ? '66%' : '33%')}; */\r\n  width: clamp(270px, 50%, 600px);\r\n\r\n  &:hover {\r\n    box-shadow: inset 0 19px 28px -18px rgba(255, 255, 255, 0.5),\r\n      inset 0 4px 6px -3px rgba(255, 255, 255, 1),\r\n      inset 0 -51px 44px -42px rgba(96, 68, 144, 0.3),\r\n      inset 0 59px 60px -32px rgba(202, 172, 255, 0.3),\r\n      inset 0 4px 16px rgba(154, 146, 210, 0.3),\r\n      inset 0 2px 25px rgba(227, 222, 255, 0.23);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getToken, requestSetPlayer } from '../actions';\r\nimport SettingsBtn from '../components/SettingsBtn';\r\nimport NeonTitle from '../components/NeonTitle';\r\nimport {\r\n  StyledLoginField,\r\n  StyledInput,\r\n  StyledInputContainer,\r\n  StyledButton,\r\n} from './styles';\r\n\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      disableBtn: true,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState(\r\n      {\r\n        [name]: value,\r\n      },\r\n      () => {\r\n        this.disableButton();\r\n      },\r\n    );\r\n  };\r\n\r\n  disableButton = () => {\r\n    const { name, email } = this.state;\r\n    const result = name && email;\r\n    this.setState({ disableBtn: !result });\r\n  };\r\n\r\n  handleClick = async () => {\r\n    const { payload, history, payloadLogin } = this.props;\r\n    const { name, email } = this.state;\r\n    await payload();\r\n    await payloadLogin({ name, gravatarEmail: email });\r\n    history.push('/ingame');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, disableBtn } = this.state;\r\n    const { history } = this.props;\r\n    return (\r\n      <>\r\n        <NeonTitle />\r\n        <StyledInputContainer>\r\n          <StyledLoginField>\r\n            <StyledInput\r\n              data-testid=\"input-player-name\"\r\n              name=\"name\"\r\n              onChange={ this.handleChange }\r\n              placeholder=\"Nome\"\r\n              type=\"text\"\r\n              value={ name }\r\n            />\r\n            <StyledInput\r\n              data-testid=\"input-gravatar-email\"\r\n              name=\"email\"\r\n              onChange={ this.handleChange }\r\n              placeholder=\"Gravatar Email\"\r\n              type=\"email\"\r\n              value={ email }\r\n            />\r\n            <StyledButton\r\n              data-testid=\"btn-play\"\r\n              disabled={ disableBtn }\r\n              onClick={ () => this.handleClick() }\r\n              type=\"button\"\r\n            >\r\n              JOGAR\r\n            </StyledButton>\r\n          </StyledLoginField>\r\n        </StyledInputContainer>\r\n        <SettingsBtn history={ history } />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  payload: PropTypes.func,\r\n  history: PropTypes.objectOf,\r\n}.isRequired;\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  payload: () => dispatch(getToken()),\r\n  payloadLogin: (payload) => dispatch(requestSetPlayer(payload)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import md5 from 'crypto-js/md5';\r\n\r\nconst encryptEmail = (email) => md5(email).toString();\r\n\r\nexport default encryptEmail;\r\n","import encryptEmail from './encryptEmail';\r\n\r\nconst updatePlayer = (players, currentPlayer) => {\r\n  const update = players.some(\r\n    ({ picture }) => picture === currentPlayer.picture,\r\n  );\r\n\r\n  return update\r\n    ? players.map((player) => {\r\n      if (player.picture === currentPlayer.picture) {\r\n        return { ...player, score: player.score + currentPlayer.score };\r\n      }\r\n      return player;\r\n    })\r\n    : [...players, currentPlayer];\r\n};\r\n\r\nexport const saveScore = ({ name, gravatarEmail, score }) => {\r\n  const currentPlayer = {\r\n    name,\r\n    picture: encryptEmail(gravatarEmail),\r\n    score,\r\n  };\r\n  const previousPlayers = JSON.parse(localStorage.getItem('Ranking'));\r\n\r\n  const players = previousPlayers\r\n    ? updatePlayer(previousPlayers, currentPlayer)\r\n    : [currentPlayer];\r\n  localStorage.setItem('Ranking', JSON.stringify(players));\r\n};\r\n\r\nconst POINT = 10;\r\nconst difficultScore = {\r\n  easy: 1,\r\n  medium: 2,\r\n  hard: 3,\r\n};\r\n\r\nexport const calculateScore = (difficulty, time) => POINT\r\n  + (time.toFixed(0) * difficultScore[difficulty]);\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { ButtonAnimation } from '../../pages/styles';\r\n\r\nexport const ButtonAnimationRed = keyframes`\r\n  from { box-shadow: 0 0 0.5vw #2fc18c, 0 0 1vw #2fc18c, 0 0 1.5vw #2fc18c; }\r\n  to { box-shadow: 0 0 1.5vw #3effb8,0 0 1vw #2fc18c, 0 0 0.5vw #2fc18c; }\r\n`;\r\n\r\nexport const StyledCorrectAnswerButton = styled.button`\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color: rgb(16, 16, 16);\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 2.5vh;\r\n  font-weight: 400;\r\n  height: 42px;\r\n  outline: none;\r\n  /* width: clamp(33%, 50% , 100%); */\r\n  width: clamp(250px, 66% ,600px);\r\n\r\n  &:disabled {\r\n    animation: ${ButtonAnimation} 1s ease-in-out infinite alternate;\r\n    background-color: #2fc18c;\r\n    border: solid 3px rgb(6, 240, 15);\r\n    box-shadow: 0 0 3vw #3effb8;\r\n    color: white;\r\n  }\r\n\r\n  &:hover:enabled {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { calculateScore, saveScore } from '../../services/saveScore';\r\nimport { setScore } from '../../actions';\r\nimport { StyledCorrectAnswerButton } from './style';\r\n\r\nclass CorrectAnswer extends React.Component {\r\n  handleClick = () => {\r\n    const { handleAnswer, difficulty, time, payload } = this.props;\r\n    if (difficulty) {\r\n      payload(calculateScore(difficulty, time));\r\n      const { player } = this.props;\r\n      saveScore(player);\r\n    }\r\n    handleAnswer();\r\n  }\r\n\r\n  render() {\r\n    const { answer, testid, time, className, disabled } = this.props;\r\n    return (\r\n      <StyledCorrectAnswerButton\r\n        className={ className }\r\n        type=\"button\"\r\n        data-testid={ testid }\r\n        onClick={ () => this.handleClick() }\r\n        disabled={ !(time && !disabled) }\r\n        // https://stackoverflow.com/questions/59480912/how-is-the-nand-gate-implemented-conceptually\r\n      >\r\n        {answer}\r\n      </StyledCorrectAnswerButton>\r\n    );\r\n  }\r\n}\r\n\r\nCorrectAnswer.propTypes = {\r\n  answer: PropTypes.string,\r\n  nextQuestion: PropTypes.func,\r\n}.isRequired;\r\n\r\nconst mapStateToProps = ({ game: { time }, player }) => ({\r\n  time,\r\n  player,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  payload: (score) => dispatch(setScore(score)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CorrectAnswer);\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const ButtonAnimationRed = keyframes`\r\n  from { box-shadow: 0 0 0.5vw #c12f2f, 0 0 1vw #c12f2f, 0 0 1.5vw #c12f2f; }\r\n  to { box-shadow: 0 0 1.5vw #c12f2f,0 0 1vw #c12f2f, 0 0 0.5vw #c12f2f; }\r\n`;\r\n\r\nexport const StyledIncorrectAnswerButton = styled.button`\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color: rgb(16, 16, 16);\r\n  font-family: 'Roboto', sans-serif;\r\n  font-size: 2.5vh;\r\n  font-weight: 400;\r\n  height: 42px;\r\n  outline: none;\r\n  /* width: clamp(33%, 50% , 100%); */\r\n  width: clamp(250px, 66% ,600px);\r\n\r\n  &:disabled {\r\n    animation: ${ButtonAnimationRed} 1s ease-in-out infinite alternate;\r\n    background-color: #c12f2f;\r\n    border: solid 3px red;\r\n    box-shadow: 0 0 3vw #3effb8;\r\n    color: white;\r\n  }\r\n\r\n  &:hover:enabled {\r\n    cursor: pointer;\r\n  }\r\n\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { saveScore } from '../../services/saveScore';\r\nimport { setScore } from '../../actions';\r\nimport { StyledIncorrectAnswerButton } from './style';\r\n\r\nclass IncorrectAnswer extends React.Component {\r\n  handleClick = () => {\r\n    const { handleAnswer, difficulty } = this.props;\r\n    if (difficulty) {\r\n      // payload(0);\r\n      const { player } = this.props;\r\n      console.log(player);\r\n      saveScore(player);\r\n    }\r\n    handleAnswer();\r\n  }\r\n\r\n  render() {\r\n    const { answer, testid, time, className, disabled } = this.props;\r\n    return (\r\n      <StyledIncorrectAnswerButton\r\n        className={ className }\r\n        type=\"button\"\r\n        data-testid={ testid }\r\n        onClick={ () => this.handleClick() }\r\n        disabled={ !(time && !disabled) }\r\n        // https://stackoverflow.com/questions/59480912/how-is-the-nand-gate-implemented-conceptually\r\n      >\r\n        {answer}\r\n      </StyledIncorrectAnswerButton>\r\n    );\r\n  }\r\n}\r\n\r\nIncorrectAnswer.propTypes = {\r\n  answer: PropTypes.string,\r\n  nextQuestion: PropTypes.func,\r\n}.isRequired;\r\n\r\nconst mapStateToProps = ({ game: { time }, player }) => ({\r\n  time,\r\n  player,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  payload: (score) => dispatch(setScore(score)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncorrectAnswer);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledNextButton = styled.button`\r\n    background: transparent;\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-family: neon;\r\n    font-size: 1em;\r\n    overflow: visible;\r\n    outline: none;\r\n    /* grid-column-end: span 2; */\r\n    /* grid-area: grid-row-end / first / end; */\r\n    margin-top: 2vh;\r\n`;\r\n\r\nexport default StyledNextButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TrybeContainer } from '../NeonTitle/style';\r\nimport StyledNextButton from './style';\r\n\r\nexport default class NextBtn extends React.Component {\r\n  render() {\r\n    const { handleClick } = this.props;\r\n    return (\r\n      <StyledNextButton\r\n        type=\"button\"\r\n        data-testid=\"btn-next\"\r\n        onClick={ () => handleClick() }\r\n      >\r\n        <TrybeContainer>\r\n          next\r\n        </TrybeContainer>\r\n      </StyledNextButton>\r\n    );\r\n  }\r\n}\r\n\r\nNextBtn.propTypes = {\r\n  handleClick: PropTypes.func,\r\n}.isRequired;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledQuestionsDiv = styled.div`\r\n  display: grid;\r\n  gap: 1vh;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  /* grid-template-columns: auto auto; */\r\n  /* grid-template-columns: repeat(2, 1fr) */\r\n  grid-auto-columns: clamp(300px, 33%, 50%);\r\n`;\r\n\r\nexport const StyledQuestion = styled.h1`\r\n  font-size: clamp(20px, 1.5em, 2em);\r\n  font-weight: bold;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CorrectAnswer from '../CorrectAnswer';\r\nimport IncorrectAnswer from '../IncorrectAnswer';\r\nimport NextBtn from '../NextBtn';\r\nimport { StyledQuestionsDiv, StyledQuestion } from './style';\r\nimport { StyledInputContainer } from '../../pages/styles';\r\n// import './style.css';\r\n\r\nconst SORT = 0.5;\r\n\r\nclass Question extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      answerIsSelected: false,\r\n      resultado: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateQuestion();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateQuestion();\r\n  }\r\n\r\n  updateQuestion = () => {\r\n    const { resultado } = this.state;\r\n    const { result } = this.props;\r\n    if (!resultado.length) {\r\n      this.renderAnswers(result);\r\n    }\r\n  };\r\n\r\n  htmlDecode = (input) => {\r\n    const doc = new DOMParser().parseFromString(input, 'text/html');\r\n    return doc.documentElement.textContent;\r\n  };\r\n\r\n  renderAnswers = (result) => {\r\n    const { answerIsSelected } = this.state;\r\n    const incorrect = result.incorrect_answers.map((answer, index) => (\r\n      <IncorrectAnswer\r\n        className=\"incorrect\"\r\n        answer={ this.htmlDecode(answer) }\r\n        key={ index }\r\n        difficulty={ result.difficulty }\r\n        testid={ `wrong-answer-${index}` }\r\n        htmlDecode={ this.htmlDecode }\r\n        handleAnswer={ () => this.handleAnswer() }\r\n        disabled={ !answerIsSelected }\r\n      />\r\n    ));\r\n    const correct = (\r\n      <CorrectAnswer\r\n        className=\"correct\"\r\n        answer={ this.htmlDecode(result.correct_answer) }\r\n        key=\"correct\"\r\n        difficulty={ result.difficulty }\r\n        testid=\"correct-answer\"\r\n        htmlDecode={ this.htmlDecode }\r\n        handleAnswer={ () => this.handleAnswer() }\r\n        disabled={ !answerIsSelected }\r\n      />\r\n    );\r\n\r\n    const arrayAnswers = [...incorrect, correct];\r\n\r\n    // https://css-tricks.com/snippets/javascript/shuffle-array/\r\n    const resultado = arrayAnswers.sort(() => SORT - Math.random());\r\n\r\n    this.setState({ resultado });\r\n  };\r\n\r\n  handleAnswer() {\r\n    this.setState((prevState) => ({\r\n      answerIsSelected: !prevState.answerIsSelected,\r\n    }));\r\n  }\r\n\r\n  handleNext() {\r\n    const { nextQuestion, history, currentQuestion } = this.props;\r\n    const TOTAL_QUESTION = 5;\r\n    this.setState({\r\n      resultado: [],\r\n    });\r\n    this.handleAnswer();\r\n    if (currentQuestion + 1 === TOTAL_QUESTION) {\r\n      history.push('/feedback');\r\n    }\r\n    nextQuestion();\r\n  }\r\n\r\n  render() {\r\n    const { category, question } = this.props;\r\n    const { answerIsSelected, resultado } = this.state;\r\n\r\n    return (\r\n      <StyledInputContainer questions>\r\n        <StyledQuestion data-testid=\"question-category\">\r\n          {`${category}`}\r\n        </StyledQuestion>\r\n        <p data-testid=\"question-text\" style={ { width: '100%' } }>{question}</p>\r\n        <StyledQuestionsDiv data-testid=\"answer-options\">\r\n          {!answerIsSelected\r\n            ? resultado.map((answer) => ({\r\n              ...answer,\r\n              props: { ...answer.props, className: '', disabled: false },\r\n            }))\r\n            : resultado}\r\n          {answerIsSelected && (\r\n            <NextBtn handleClick={ () => this.handleNext() } />\r\n          )}\r\n        </StyledQuestionsDiv>\r\n      </StyledInputContainer>\r\n    );\r\n  }\r\n}\r\n\r\nQuestion.propTypes = {\r\n  category: PropTypes.string,\r\n  question: PropTypes.string,\r\n}.isRequired;\r\n\r\nexport default Question;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const StyledImg = styled.img`\r\n  clip-path: circle(50% at center);\r\n  width: 75px;\r\n`;\r\n\r\nexport const StyledPlayerDataR = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledPlayerDataC = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const ContainerAnimation = keyframes`\r\n  from { box-shadow: rgba(25, 85, 229, 0.4) -5px 5px,\r\n    rgba(25, 85, 229, 0.3) -10px 10px, rgba(25, 85, 229, 0.2) -15px 15px; }\r\n  to { box-shadow: rgba(25, 85, 229, 0.2) -15px 15px,\r\n  rgba(25, 85, 229, 0.1) -20px 20px, rgba(25, 85, 229, 0.05) -25px 25px; }\r\n`;\r\n\r\n// box-shadow: blue 0px 0px 0px 2px inset, rgb(255, 255, 255) 10px -10px 0px -3px, rgb(31, 193, 27) 10px -10px, rgb(255, 255, 255) 20px -20px 0px -3px, rgb(255, 217, 19) 20px -20px, rgb(255, 255, 255) 30px -30px 0px -3px, rgb(255, 156, 85) 30px -30px, rgb(255, 255, 255) 40px -40px 0px -3px, rgb(255, 85, 85) 40px -40px;\r\n\r\nexport const StyledTopContainer = styled.div`\r\n  align-items: center;\r\n  border-radius: 2vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 2vh auto;\r\n  padding: 1vw;\r\n  width: 50%;\r\n`;\r\n\r\n// build a card that grows to bottom from middle screenshotOnRunFailure\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport encryptEmail from '../../services/encryptEmail';\r\nimport NeonTitle from '../NeonTitle';\r\nimport {\r\n  StyledImg,\r\n  StyledPlayerDataC,\r\n  StyledPlayerDataR,\r\n  StyledTopContainer,\r\n} from './style';\r\n// import { StyledInputContainer } from '../../pages/styles';\r\n\r\nclass Header extends React.Component {\r\n  userData = (name, score, gravatarEmail) => (\r\n    <StyledPlayerDataR>\r\n      <StyledImg\r\n        data-testid=\"header-profile-picture\"\r\n        src={ `https://www.gravatar.com/avatar/${encryptEmail(gravatarEmail)}` }\r\n        alt=\"player avatar\"\r\n      />\r\n      <StyledPlayerDataC>\r\n        <span data-testid=\"header-player-name\">{name}</span>\r\n        <span>\r\n          Pontuação:\r\n          {' '}\r\n          <span data-testid=\"header-score\">{score}</span>\r\n        </span>\r\n      </StyledPlayerDataC>\r\n    </StyledPlayerDataR>\r\n  );\r\n\r\n  render() {\r\n    const { gravatarEmail, name, score } = this.props;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NeonTitle />\r\n          <StyledTopContainer>\r\n            {this.userData(name, score, gravatarEmail)}\r\n          </StyledTopContainer>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ player: { gravatarEmail, name, score } }) => ({\r\n  gravatarEmail,\r\n  name,\r\n  score,\r\n});\r\n\r\nHeader.propTypes = {\r\n  player: PropTypes.objectOf,\r\n}.isRequired;\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import styled from 'styled-components';\r\n\r\nconst fulltime = 30;\r\nexport const StyledCounter = styled.div`\r\n  background-color: transparent;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0 2vw 5px #4caf50;\r\n  height: 5px;\r\n  margin-top: -5px;\r\n  padding: 0;\r\n  width: ${(props) => `${(props.time / fulltime) * 100}%`};\r\n`;\r\nexport const CounterWrap = styled.div`\r\n  background-color: transparent !important;\r\n  /* width:clamp(270px,50%,600px); */\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { elapsedTime } from '../../actions';\r\nimport { StyledCounter, CounterWrap } from './style';\r\n\r\nclass Counter extends React.Component {\r\n  componentDidMount() {\r\n    const { countSecond } = this.props;\r\n    const second = 1000;\r\n\r\n    setInterval(() => {\r\n      countSecond();\r\n    }, second);\r\n  }\r\n\r\n  render() {\r\n    const { time } = this.props;\r\n    return (\r\n      <section\r\n        style={ {\r\n          width: 'clamp(270px, 50%, 600px)',\r\n          margin: 'auto',\r\n          height: '0',\r\n        } }\r\n      >\r\n        <CounterWrap className=\"w3-light-grey w3-tiny\">\r\n          <StyledCounter className=\"w3-container w3-green\" time={ time }>\r\n            {' '}\r\n          </StyledCounter>\r\n        </CounterWrap>\r\n        <p className=\"time--text\" style={ { color: 'transparent' } }>\r\n          Tempo:\r\n          {' '}\r\n          <span className=\"time--span\">{time}</span>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game: { time } }) => ({\r\n  time,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  countSecond: () => dispatch(elapsedTime()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n\r\nCounter.propTypes = {\r\n  elapsedTime: PropTypes.func,\r\n  time: PropTypes.number,\r\n}.isRequired;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getToken, getTrivia, resetTime } from '../actions';\r\nimport fetchTrivia from '../services/fetchTrivia';\r\nimport Question from '../components/Question';\r\nimport Header from '../components/Header';\r\nimport Counter from '../components/Counter';\r\n\r\nclass InGame extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loaded: false,\r\n      questions: {},\r\n      currentQuestion: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { resetCounter } = this.props;\r\n    resetCounter();\r\n    this.getTrivia();\r\n  }\r\n\r\n  async getTrivia() {\r\n    let questions = await fetchTrivia();\r\n    const { payload } = this.props;\r\n    if (questions.response_code) {\r\n      await payload();\r\n      questions = await fetchTrivia();\r\n    }\r\n    const { loaded } = this.state;\r\n    if (!loaded) {\r\n      this.setState({\r\n        loaded: true,\r\n        questions,\r\n        currentQuestion: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  nextQuestion() {\r\n    const { resetCounter } = this.props;\r\n    this.setState(\r\n      (prevState) => ({\r\n        currentQuestion: prevState.currentQuestion + 1,\r\n      }),\r\n      () => resetCounter(),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { questions, currentQuestion } = this.state;\r\n    const { history } = this.props;\r\n    return (\r\n      <>\r\n        <Header />\r\n        {questions.results && (\r\n          <div className=\"trivia--container\">\r\n            <div className=\"questions\">\r\n              <Question\r\n                category={ questions.results[currentQuestion].category }\r\n                question={ questions.results[currentQuestion].question }\r\n                result={ questions.results[currentQuestion] }\r\n                currentQuestion={ currentQuestion }\r\n                history={ history }\r\n                nextQuestion={ () => this.nextQuestion() }\r\n              />\r\n            </div>\r\n            <div className=\"timer\">\r\n              <Counter />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getQuestions: (token) => dispatch(getTrivia(token)),\r\n  payload: () => dispatch(getToken()),\r\n  resetCounter: () => dispatch(resetTime()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.trivia,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InGame);\r\n\r\nInGame.propTypes = {\r\n  payload: PropTypes.func,\r\n  questions: PropTypes.objectOf,\r\n}.isRequired;\r\n","import React from 'react';\r\nimport NeonTitle from '../components/NeonTitle';\r\n\r\nexport default class Settings extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <NeonTitle />\r\n        <h1 data-testid=\"settings-title\">Configurações</h1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../components/Header';\r\nimport { requestSetPlayer } from '../actions';\r\nimport { StyledButton, StyledRankingButton,\r\n  StyledFeedbackDiv } from './styles';\r\n\r\nclass Feedback extends React.Component {\r\n  handleClick = () => {\r\n    const { payload, history } = this.props;\r\n    payload({ score: 0, assertions: 0 });\r\n    history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { score, assertions, history } = this.props;\r\n    const magicNumber = 3;\r\n    const message = assertions >= magicNumber ? 'Well Done!' : 'Could be better...';\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <StyledFeedbackDiv>\r\n          <section>\r\n            <h1 data-testid=\"feedback-text\">{message}</h1>\r\n          </section>\r\n          <section>\r\n            <h2>\r\n              Score:\r\n              {' '}\r\n              <span data-testid=\"feedback-total-score\">{score}</span>\r\n            </h2>\r\n          </section>\r\n          <section>\r\n            <h2>\r\n              Assertions:\r\n              {' '}\r\n              <span data-testid=\"feedback-total-question\">{assertions}</span>\r\n            </h2>\r\n          </section>\r\n          <StyledButton\r\n            type=\"button\"\r\n            onClick={ this.handleClick }\r\n            data-testid=\"btn-play-again\"\r\n          >\r\n            Play Again\r\n          </StyledButton>\r\n          <StyledRankingButton\r\n            type=\"button\"\r\n            data-testid=\"btn-ranking\"\r\n            onClick={ () => history.push('/ranking') }\r\n          >\r\n            Ranking\r\n          </StyledRankingButton>\r\n        </StyledFeedbackDiv>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFeedback.propTypes = {\r\n  score: PropTypes.number,\r\n}.isRequired;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  payload: (payload) => dispatch(requestSetPlayer(payload)),\r\n});\r\n\r\nconst mapStateToProps = ({ player: { score, assertions } }) => ({\r\n  score,\r\n  assertions,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport NeonTitle from '../components/NeonTitle';\r\nimport { requestSetPlayer } from '../actions';\r\nimport { StyledButton, StyledPlayerRank, StyledRankingContainer } from './styles';\r\nimport { StyledImg } from '../components/Header/style';\r\nimport { TrybeContainer } from '../components/NeonTitle/style';\r\n\r\nclass Ranking extends React.Component {\r\n  handleClick = () => {\r\n    const { payload, history } = this.props;\r\n    payload({ score: 0, assertions: 0 });\r\n    history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const getLocalStorage = JSON.parse(localStorage.getItem('Ranking'));\r\n    const playerRanking = getLocalStorage && getLocalStorage\r\n      .sort((a, b) => b.score - a.score);\r\n    return (\r\n      <>\r\n        <NeonTitle />\r\n        <TrybeContainer\r\n          data-testid=\"ranking-title\"\r\n          style={ { fontFamily: 'neon', textAlign: 'center' } }\r\n        >\r\n          Ranking\r\n        </TrybeContainer>\r\n        <StyledRankingContainer>\r\n          {playerRanking\r\n            && playerRanking.map((player, index) => (\r\n              <StyledPlayerRank key={ index }>\r\n                {console.log(player.picture)}\r\n                <StyledImg\r\n                  src={ `http://www.gravatar.com/avatar/${player.picture}` }\r\n                  alt={ player.name }\r\n                />\r\n                <p data-testid={ `player-name-${index}` }>{player.name}</p>\r\n                <p data-testid={ `player-score-${index}` }>{player.score}</p>\r\n              </StyledPlayerRank>\r\n            ))}\r\n          <StyledButton\r\n            type=\"button\"\r\n            data-testid=\"btn-go-home\"\r\n            onClick={ () => this.handleClick() }\r\n            style={ { marginTop: '20px' } }\r\n          >\r\n            Voltar ao Início\r\n          </StyledButton>\r\n        </StyledRankingContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRanking.propTypes = {\r\n  history: PropTypes.objectOf,\r\n  score: PropTypes.number,\r\n}.isRequired;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  payload: (payload) => dispatch(requestSetPlayer(payload)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Ranking);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport InGame from './pages/InGame';\r\nimport Settings from './pages/Settings';\r\nimport Feedback from './pages/Feedback';\r\nimport Ranking from './pages/Ranking';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" render={ (props) => <Login { ...props } /> } />\r\n      <Route path=\"/ingame\" render={ (props) => <InGame { ...props } /> } />\r\n      <Route path=\"/settings\" render={ (props) => <Settings { ...props } /> } />\r\n      <Route path=\"/feedback\" render={ (props) => <Feedback { ...props } /> } />\r\n      <Route path=\"/ranking\" render={ (props) => <Ranking { ...props } /> } />\r\n    </Switch>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { SET_PLAYER, SET_SCORE } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  assertions: 0,\r\n  score: 0,\r\n  gravatarEmail: '',\r\n};\r\n\r\nconst playerReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n  case SET_PLAYER:\r\n    return { ...state, ...action.payload };\r\n  case SET_SCORE:\r\n    return { ...state,\r\n      score: state.score + action.payload,\r\n      assertions: state.assertions + 1 };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default playerReducer;\r\n","import { SET_PLAYER_TOKEN } from '../actions';\r\n\r\nconst INITIAL_STATE = '';\r\n\r\nconst tokenReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n  case SET_PLAYER_TOKEN:\r\n    return action.payload;\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default tokenReducer;\r\n","import { SET_TRIVIA } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  response_code: 3,\r\n  results: [],\r\n};\r\n\r\nconst triviaReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n  case SET_TRIVIA:\r\n    return { ...action.payload };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default triviaReducer;\r\n","import { SET_TIME, RESET_TIME } from '../actions';\r\n\r\nconst INITIAL_STATE = { time: 30 };\r\n\r\nconst timeReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n  case SET_TIME:\r\n    return { ...state, time: state.time && state.time - 1 };\r\n  case RESET_TIME:\r\n    return INITIAL_STATE;\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default timeReducer;\r\n","import { combineReducers } from 'redux';\r\nimport player from './player';\r\nimport token from './token';\r\nimport trivia from './trivia';\r\nimport game from './timer';\r\n\r\nconst reducer = combineReducers({ player, token, trivia, game });\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ));\r\n\r\nif (window.Cypress) {\r\n  window.store = store;\r\n}\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}